// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

type CreateGuestReq struct {
	Name  string "json:\"name\""
	Email string "json:\"email\""
}

type CreateMenuItemReq struct {
	Name        string "json:\"name\""
	Description string "json:\"description\""
	Image       string "json:\"image\""
	CategoryId  int    "json:\"categoryId\""
}

// DeleteGuestNoContent is response for DeleteGuest operation.
type DeleteGuestNoContent struct{}

func (*DeleteGuestNoContent) deleteGuestRes() {}

// DeleteMenuItemNoContent is response for DeleteMenuItem operation.
type DeleteMenuItemNoContent struct{}

func (*DeleteMenuItemNoContent) deleteMenuItemRes() {}

// Ref: #/components/schemas/GuestCreate
type GuestCreate struct {
	ID    int    "json:\"id\""
	Name  string "json:\"name\""
	Email string "json:\"email\""
}

func (*GuestCreate) createGuestRes() {}

// Ref: #/components/schemas/GuestList
type GuestList struct {
	ID    int    "json:\"id\""
	Name  string "json:\"name\""
	Email string "json:\"email\""
}

// Ref: #/components/schemas/GuestRead
type GuestRead struct {
	ID    int    "json:\"id\""
	Name  string "json:\"name\""
	Email string "json:\"email\""
}

func (*GuestRead) readGuestRes() {}

// Ref: #/components/schemas/GuestUpdate
type GuestUpdate struct {
	ID    int    "json:\"id\""
	Name  string "json:\"name\""
	Email string "json:\"email\""
}

func (*GuestUpdate) updateGuestRes() {}

type ListGuestOKApplicationJSON []GuestList

func (ListGuestOKApplicationJSON) listGuestRes() {}

type ListMenuItemOKApplicationJSON []MenuItemList

func (ListMenuItemOKApplicationJSON) listMenuItemRes() {}

// Ref: #/components/schemas/MenuItemCreate
type MenuItemCreate struct {
	ID          int    "json:\"id\""
	Name        string "json:\"name\""
	Description string "json:\"description\""
	Image       string "json:\"image\""
	CategoryId  int    "json:\"categoryId\""
}

func (*MenuItemCreate) createMenuItemRes() {}

// Ref: #/components/schemas/MenuItemList
type MenuItemList struct {
	ID          int    "json:\"id\""
	Name        string "json:\"name\""
	Description string "json:\"description\""
	Image       string "json:\"image\""
	CategoryId  int    "json:\"categoryId\""
}

// Ref: #/components/schemas/MenuItemRead
type MenuItemRead struct {
	ID          int    "json:\"id\""
	Name        string "json:\"name\""
	Description string "json:\"description\""
	Image       string "json:\"image\""
	CategoryId  int    "json:\"categoryId\""
}

func (*MenuItemRead) readMenuItemRes() {}

// Ref: #/components/schemas/MenuItemUpdate
type MenuItemUpdate struct {
	ID          int    "json:\"id\""
	Name        string "json:\"name\""
	Description string "json:\"description\""
	Image       string "json:\"image\""
	CategoryId  int    "json:\"categoryId\""
}

func (*MenuItemUpdate) updateMenuItemRes() {}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R400) createGuestRes()    {}
func (*R400) createMenuItemRes() {}
func (*R400) deleteGuestRes()    {}
func (*R400) deleteMenuItemRes() {}
func (*R400) listGuestRes()      {}
func (*R400) listMenuItemRes()   {}
func (*R400) readGuestRes()      {}
func (*R400) readMenuItemRes()   {}
func (*R400) updateGuestRes()    {}
func (*R400) updateMenuItemRes() {}

type R404 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R404) deleteGuestRes()    {}
func (*R404) deleteMenuItemRes() {}
func (*R404) listGuestRes()      {}
func (*R404) listMenuItemRes()   {}
func (*R404) readGuestRes()      {}
func (*R404) readMenuItemRes()   {}
func (*R404) updateGuestRes()    {}
func (*R404) updateMenuItemRes() {}

type R409 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R409) createGuestRes()    {}
func (*R409) createMenuItemRes() {}
func (*R409) deleteGuestRes()    {}
func (*R409) deleteMenuItemRes() {}
func (*R409) listGuestRes()      {}
func (*R409) listMenuItemRes()   {}
func (*R409) readGuestRes()      {}
func (*R409) readMenuItemRes()   {}
func (*R409) updateGuestRes()    {}
func (*R409) updateMenuItemRes() {}

type R500 struct {
	Code   int    "json:\"code\""
	Status string "json:\"status\""
	Errors jx.Raw "json:\"errors\""
}

func (*R500) createGuestRes()    {}
func (*R500) createMenuItemRes() {}
func (*R500) deleteGuestRes()    {}
func (*R500) deleteMenuItemRes() {}
func (*R500) listGuestRes()      {}
func (*R500) listMenuItemRes()   {}
func (*R500) readGuestRes()      {}
func (*R500) readMenuItemRes()   {}
func (*R500) updateGuestRes()    {}
func (*R500) updateMenuItemRes() {}

type UpdateGuestReq struct {
	Name  OptString "json:\"name\""
	Email OptString "json:\"email\""
}

type UpdateMenuItemReq struct {
	Name        OptString "json:\"name\""
	Description OptString "json:\"description\""
	Image       OptString "json:\"image\""
	CategoryId  OptInt    "json:\"categoryId\""
}
